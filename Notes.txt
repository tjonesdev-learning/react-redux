**Common conventions:**

- Double quotes ("") for JSX properties (i.e. <label for="name"></label>)
- Single quotes ('') for non-JSX (i.e. style={{color='white'}})

- Use "className" instead of "class" in JSX to avoid collisions over Javascript "class"

- Use "htmlFor" instead of "for" in JSX to differentiate from Javascript for loops

- Do not place function calls that only need to be retrieved once in the "render()" portion of a class-based component. *Instead, place it in the constructor function where state is initialized.* This prevents it from constantly being re-fetched every time the app is rendered or re-rendered.

- *Re: Above: Do not place function calls in the constructor function, but rather the componentDidMount method to keep code readable and concise

- Constructor method not necessary for state initialization because babel refactors "state = {}" to be the constructor method for us.

- Create "helper function" to store render method content so wrapping or adding css to content is simpler

- Put component function at bottom of file with declarations and helper functions at top

- When naming event handler functions with onChange, onClick, onSubmit, etc, common convention is "on" or "handle" + [thing being changed/clicked/submitted/etc.] + "change"/"click"/"submit"/etc.
	EXAMPLE1: Using onChange when user types in an input field would be "onInputChange" or "handleInputChange".
	EXAMPLE2: Using onClick when user clicks on a button would be "onButtonClick" or "handleButtonClick".

- Controlled inputs are better than uncontrolled so that data is stored in the React side instead of the HTML side

- this.bind not needed if using arrow functions because arrow functions auto bind this

- Usually put third-party imports above component imports